{
  "version": 3,
  "sources": ["../lib/main.js", "../lib/index.js"],
  "sourcesContent": ["/**\n* @license Apache-2.0\n*\n* Copyright (c) 2022 The Stdlib Authors.\n*\n* Licensed under the Apache License, Version 2.0 (the \"License\");\n* you may not use this file except in compliance with the License.\n* You may obtain a copy of the License at\n*\n*    http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing, software\n* distributed under the License is distributed on an \"AS IS\" BASIS,\n* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n* See the License for the specific language governing permissions and\n* limitations under the License.\n*/\n\n'use strict';\n\n// MODULES //\n\nvar isString = require( '@stdlib/assert-is-string' ).isPrimitive;\nvar hasOwnProp = require( '@stdlib/assert-has-own-property' );\nvar database = require( '@stdlib/error-tools-database' );\nvar format = require( '@stdlib/string-format' );\n\n\n// VARIABLES //\n\nvar db;\n\n\n// MAIN //\n\n/**\n* Returns an error message corresponding to a provided two-character error identifier.\n*\n* @param {string} id - error identifier\n* @throws {TypeError} must provide a string\n* @returns {(string|null)} error message\n*\n* @example\n* var v = id2msg( '9b' );\n* // returns <string>\n*\n* @example\n* var v = id2msg( 'boop' );\n* // returns null\n*/\nfunction id2msg( id ) {\n\tif ( !isString( id ) ) {\n\t\tthrow new TypeError( format( 'invalid argument. Must provide a string. Value: `%s`.', id ) );\n\t}\n\tif ( !db ) {\n\t\tdb = database();\n\t}\n\tif ( hasOwnProp( db, id ) ) {\n\t\treturn db[ id ];\n\t}\n\treturn null;\n}\n\n\n// EXPORTS //\n\nmodule.exports = id2msg;\n", "/**\n* @license Apache-2.0\n*\n* Copyright (c) 2022 The Stdlib Authors.\n*\n* Licensed under the Apache License, Version 2.0 (the \"License\");\n* you may not use this file except in compliance with the License.\n* You may obtain a copy of the License at\n*\n*    http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing, software\n* distributed under the License is distributed on an \"AS IS\" BASIS,\n* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n* See the License for the specific language governing permissions and\n* limitations under the License.\n*/\n\n'use strict';\n\n/**\n* Return an error message corresponding to a provided two-character error identifier.\n*\n* @module @stdlib/error-tools-id2msg\n*\n* @example\n* var id2msg = require( '@stdlib/error-tools-id2msg' );\n*\n* var v = id2msg( '8t' );\n* // e.g., returns 'invalid option. `%s` option must be an array. Option: `%s`.'\n*/\n\n// MODULES //\n\nvar id2msg = require( './main.js' );\n\n\n// EXPORTS //\n\nmodule.exports = id2msg;\n"],
  "mappings": "uGAAA,IAAAA,EAAAC,EAAA,SAAAC,EAAAC,EAAA,cAsBA,IAAIC,EAAW,QAAS,0BAA2B,EAAE,YACjDC,EAAa,QAAS,iCAAkC,EACxDC,EAAW,QAAS,8BAA+B,EACnDC,EAAS,QAAS,uBAAwB,EAK1CC,EAoBJ,SAASC,EAAQC,EAAK,CACrB,GAAK,CAACN,EAAUM,CAAG,EAClB,MAAM,IAAI,UAAWH,EAAQ,wDAAyDG,CAAG,CAAE,EAK5F,OAHMF,IACLA,EAAKF,EAAS,GAEVD,EAAYG,EAAIE,CAAG,EAChBF,EAAIE,CAAG,EAER,IACR,CAKAP,EAAO,QAAUM,IChCjB,IAAIE,EAAS,IAKb,OAAO,QAAUA",
  "names": ["require_main", "__commonJSMin", "exports", "module", "isString", "hasOwnProp", "database", "format", "db", "id2msg", "id", "id2msg"]
}
